export class AudioProcessor extends EventTarget{constructor(s=2e3,t=250,i=4e3,e=!1){super(),this.timeInterval=s,this.freqStart=t,this.freqEnd=i,this.freqRange=i-t,this.centerFrequency=(t+i)/2,this.Q=this.centerFrequency/this.freqRange,this.noiseMode=!0,this.alternating=e,this.sumPSignal=0,this.sumPNoise=0,this.signalFrames=0,this.noiseFrames=0,this.rmsSignal=0,this.rmsNoise=0,this.snr=0,this.audioContext=null,this.mediaStream=null,this.analyser=null,this.bandPassFilter=null,this.dataArray=null,this.fftSize=16384,this.updateTimerId=null,this.rafId=null}async start(){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return Promise.reject(Error("Microphone not supported"));try{this.mediaStream=await navigator.mediaDevices.getUserMedia({audio:!0}),this.audioContext=new(window.AudioContext||window.webkitAudioContext);let s=this.audioContext.createMediaStreamSource(this.mediaStream);this.bandPassFilter=this.audioContext.createBiquadFilter(),this.bandPassFilter.type="bandpass",this.bandPassFilter.frequency.value=this.centerFrequency,this.bandPassFilter.Q.value=this.Q,s.connect(this.bandPassFilter),this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize,this.bandPassFilter.connect(this.analyser);let t=this.analyser.frequencyBinCount;return this.dataArray=new Uint8Array(t),this._processAudio(),this._startUpdateTimer(),Promise.resolve()}catch(i){return Promise.reject(i)}}stop(){this.updateTimerId&&(clearInterval(this.updateTimerId),this.updateTimerId=null),this.rafId&&(cancelAnimationFrame(this.rafId),this.rafId=null),this.audioContext&&(this.audioContext.close(),this.audioContext=null),this.mediaStream&&(this.mediaStream.getTracks().forEach(s=>s.stop()),this.mediaStream=null)}setIntervalTime(s){this.timeInterval=s,this.updateTimerId&&(clearInterval(this.updateTimerId),this._startUpdateTimer())}setAlternating(s){this.alternating=s}resetMeasurements(){this.sumPSignal=0,this.sumPNoise=0,this.rmsNoise=0,this.rmsSignal=0,this.signalFrames=0,this.noiseFrames=0}_processAudio(){if(!this.analyser||!this.dataArray)return;this.analyser.getByteFrequencyData(this.dataArray);let s=0;for(let t=this.freqStart;t<this.freqEnd&&t<this.dataArray.length;t++)s+=this.dataArray[t]**2;let i=Math.sqrt(s/this.freqRange);this.noiseMode?(i>0&&(this.rmsNoise=i),this.sumPNoise+=i*i,this.noiseFrames++):(i>0&&(this.rmsSignal=i),this.sumPSignal+=i*i,this.signalFrames++),this.rafId=requestAnimationFrame(()=>this._processAudio())}_startUpdateTimer(){this.updateTimerId=setInterval(()=>{if(this.noiseMode)this.snr=0;else{let s=this.signalFrames?this.sumPSignal/this.signalFrames:0,t=this.noiseFrames?this.sumPNoise/this.noiseFrames:0;this.snr=t>0?10*Math.log10(s/t):0}let i={rmsSignal:this.rmsSignal,rmsNoise:this.rmsNoise,snr:this.snr,noiseMode:this.noiseMode,timestamp:Date.now()};this.dispatchEvent(new CustomEvent("update",{detail:i})),this.noiseMode||(this.sumPSignal=0,this.signalFrames=0,this.rmsSignal=0,this.rmsNoise=0),this.alternating?(this.noiseMode=!this.noiseMode,this.noiseMode||(this.sumPSignal=0,this.signalFrames=0,this.rmsSignal=0,this.rmsNoise=0)):this.noiseMode&&(this.noiseMode=!1)},this.timeInterval)}}
